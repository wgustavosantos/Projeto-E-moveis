/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package emoveisVIEW.view;

import emoveisDAO.ImovelCRUD;
import emoveisMODEL.Imovel;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Leandro
 */
public class ListaImovel extends javax.swing.JFrame {

    /**
     * Creates new form ListaImovel
     */
    public ListaImovel() {
        initComponents();
        listarImoveis();

        //Setando evento ouvinte OnCLose, mostra o menu e fecha a janela atual
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                mostrarMenu();
                dispose();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBusca = new javax.swing.JTextField();
        botaoAtualizar = new javax.swing.JButton();
        botaoApagar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtTabelaImovel = new javax.swing.JTable();
        botaoVoltar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tela de consulta");

        botaoAtualizar.setText("Atualizar");
        botaoAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtualizarActionPerformed(evt);
            }
        });

        botaoApagar.setText("Deletar");
        botaoApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoApagarActionPerformed(evt);
            }
        });

        txtTabelaImovel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Tipo", "Area", "Cor", "Comodos", "Enedereço", "Bairro", "Número", "CEP", "Cidade", "Valor", "Situação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        txtTabelaImovel.getTableHeader().setReorderingAllowed(false);
        txtTabelaImovel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTabelaImovelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(txtTabelaImovel);
        if (txtTabelaImovel.getColumnModel().getColumnCount() > 0) {
            txtTabelaImovel.getColumnModel().getColumn(0).setResizable(false);
            txtTabelaImovel.getColumnModel().getColumn(0).setPreferredWidth(50);
            txtTabelaImovel.getColumnModel().getColumn(1).setResizable(false);
            txtTabelaImovel.getColumnModel().getColumn(1).setPreferredWidth(130);
            txtTabelaImovel.getColumnModel().getColumn(2).setResizable(false);
            txtTabelaImovel.getColumnModel().getColumn(2).setPreferredWidth(75);
            txtTabelaImovel.getColumnModel().getColumn(3).setResizable(false);
            txtTabelaImovel.getColumnModel().getColumn(3).setPreferredWidth(120);
            txtTabelaImovel.getColumnModel().getColumn(4).setResizable(false);
            txtTabelaImovel.getColumnModel().getColumn(4).setPreferredWidth(100);
            txtTabelaImovel.getColumnModel().getColumn(5).setResizable(false);
            txtTabelaImovel.getColumnModel().getColumn(5).setPreferredWidth(180);
            txtTabelaImovel.getColumnModel().getColumn(6).setResizable(false);
            txtTabelaImovel.getColumnModel().getColumn(6).setPreferredWidth(150);
            txtTabelaImovel.getColumnModel().getColumn(7).setResizable(false);
            txtTabelaImovel.getColumnModel().getColumn(7).setPreferredWidth(100);
            txtTabelaImovel.getColumnModel().getColumn(8).setResizable(false);
            txtTabelaImovel.getColumnModel().getColumn(8).setPreferredWidth(130);
            txtTabelaImovel.getColumnModel().getColumn(9).setResizable(false);
            txtTabelaImovel.getColumnModel().getColumn(9).setPreferredWidth(130);
            txtTabelaImovel.getColumnModel().getColumn(10).setResizable(false);
            txtTabelaImovel.getColumnModel().getColumn(10).setPreferredWidth(130);
            txtTabelaImovel.getColumnModel().getColumn(11).setResizable(false);
            txtTabelaImovel.getColumnModel().getColumn(11).setPreferredWidth(110);
        }

        botaoVoltar.setText("Voltar");
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });

        jLabel1.setText("Digite o id do imovel para realizar a busca ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 819, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                    .addComponent(txtBusca))
                .addGap(18, 18, 18)
                .addComponent(botaoAtualizar)
                .addGap(18, 18, 18)
                .addComponent(botaoApagar)
                .addGap(18, 18, 18)
                .addComponent(botaoVoltar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoAtualizar)
                    .addComponent(botaoApagar)
                    .addComponent(botaoVoltar))
                .addGap(33, 33, 33))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtTabelaImovelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTabelaImovelMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_txtTabelaImovelMouseClicked

    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarActionPerformed
        // TODO add your handling code here:
        //ImovelCRUD.closeConnection();
        TelaPrincipal telaPrincipal = new TelaPrincipal();
        telaPrincipal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_botaoVoltarActionPerformed

    private void botaoApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoApagarActionPerformed
        // TODO add your handling code here:
        int id_imovel;

        if (((txtBusca.getText()).isEmpty()) && txtTabelaImovel.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um registro ou indique o id do imóvel");
        } else if ((txtBusca.getText()).isEmpty()) {

            int linhaSelecionada = txtTabelaImovel.getSelectedRow();
            DefaultTableModel tabelaImovel = (DefaultTableModel) txtTabelaImovel.getModel();
            id_imovel = Integer.parseInt(tabelaImovel.getValueAt(linhaSelecionada, 0).toString());
            ImovelCRUD.deletar(id_imovel);

            ListaImovel telaListaImovel = new ListaImovel();
            //telaListaImovel.recebeMenu(this);
            this.setVisible(false);
            telaListaImovel.setVisible(true);

        } else {
            id_imovel = Integer.parseInt(txtBusca.getText());
            if (ImovelCRUD.check(id_imovel)) {
                ImovelCRUD.deletar(id_imovel);
                ListaImovel telaListaImovel = new ListaImovel();
                //telaListaImovel.recebeMenu(this);
                this.setVisible(false);
                telaListaImovel.setVisible(true);
                
            } else {
                JOptionPane.showMessageDialog(this, "Não existe id " + id_imovel);
            }
        }
        
        
    }//GEN-LAST:event_botaoApagarActionPerformed

    private void botaoAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtualizarActionPerformed
        // TODO add your handling code here:

        int id_imovel;

        if (((txtBusca.getText()).isEmpty()) && txtTabelaImovel.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um registro ou indique o id do imóvel");
        } else if ((txtBusca.getText()).isEmpty()) {

            DefaultTableModel tabelaImovel = (DefaultTableModel) txtTabelaImovel.getModel();
            int linhaSelecionada = txtTabelaImovel.getSelectedRow();          
            
            id_imovel = Integer.parseInt(tabelaImovel.getValueAt(linhaSelecionada, 0).toString());

            AtualizaImovel atualizaImovel = new AtualizaImovel(id_imovel);
            atualizaImovel.setVisible(true);
            this.dispose();

        } else {
            id_imovel = Integer.parseInt(txtBusca.getText());
            if (ImovelCRUD.check(id_imovel)) {
                AtualizaImovel atualizaImovel = new AtualizaImovel(id_imovel);
                atualizaImovel.setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Não existe id " + id_imovel);
            }
        }


    }//GEN-LAST:event_botaoAtualizarActionPerformed

    private void onClose() {

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaImovel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaImovel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaImovel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaImovel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaImovel().setVisible(true);
            }
        });
    }

    public void recebeMenu(TelaPrincipal telaPrincipal) {
        this.telaPrincipal = telaPrincipal;
    }

    public void mostrarMenu() {
        if (telaPrincipal != null) {
            this.dispose();
            telaPrincipal.setVisible(true);
        }
    }

    private void listarImoveis() {

        List<Imovel> imoveis = ImovelCRUD.read();
        DefaultTableModel tabelaImoveis = (DefaultTableModel) txtTabelaImovel.getModel();

        for (Imovel imovel : imoveis) {

            String id_imovel = String.valueOf(imovel.getId_imovel());
            String tipo_imovel = imovel.getTipo_imovel();
            String area_imovel = String.valueOf(imovel.getArea_imovel());
            String cor_imovel = imovel.getCor_imovel();
            String qtd_comodos_imovel = String.valueOf(imovel.getQtd_comodos_imovel());
            String endereco_imovel = imovel.getEndereco_imovel();

            String enderecos[] = endereco_imovel.split(",");
            endereco_imovel = enderecos[0];
            String enderecoBairro_imovel = enderecos[1];
            String enderecoNumero_imovel = enderecos[2];
            String enderecoCep_imovel = enderecos[3];
            String enderecoCidade_imovel = enderecos[4];
            String valor_imovel = String.valueOf(imovel.getValor_imovel());
            valor_imovel = "R$ " + valor_imovel;
            String status_imovel = (imovel.isStatus_imovel() == true) ? "Disponível" : "Indisponível";

            Object[] listaTabelaImoveis = new Object[]{
                id_imovel,
                tipo_imovel,
                area_imovel,
                cor_imovel,
                qtd_comodos_imovel,
                endereco_imovel,
                enderecoBairro_imovel,
                enderecoNumero_imovel,
                enderecoCep_imovel,
                enderecoCidade_imovel,
                valor_imovel,
                status_imovel
            };

            tabelaImoveis.addRow(listaTabelaImoveis);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoApagar;
    private javax.swing.JButton botaoAtualizar;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBusca;
    private javax.swing.JTable txtTabelaImovel;
    // End of variables declaration//GEN-END:variables
    TelaPrincipal telaPrincipal = new TelaPrincipal();
}
